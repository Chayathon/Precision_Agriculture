generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model role {
  id        Int    @id @default(autoincrement())
  role_name String
  users     user[]
}

model province {
  province_id Int     @id @db.UnsignedInt
  name_th     String? @db.VarChar(120)
  name_en     String? @db.VarChar(120)
  users       user[]  // ความสัมพันธ์ย้อนกลับไปยัง user
  districts   district[] // ความสัมพันธ์ไปยัง district
}

model district {
  district_id Int     @id @db.UnsignedInt
  province_id Int     @db.UnsignedInt
  name_th     String? @db.VarChar(120)
  name_en     String? @db.VarChar(120)
  provinceRel province @relation(fields: [province_id], references: [province_id]) // ความสัมพันธ์กับ province
  users       user[]  // ความสัมพันธ์ย้อนกลับไปยัง user
  subdistricts subdistrict[] // ความสัมพันธ์ไปยัง subdistrict

  @@index([province_id], map: "province_id")
}

model subdistrict {
  subdistrict_id Int      @id @db.UnsignedInt
  district_id    Int?     @db.UnsignedInt
  name_th        String?  @db.VarChar(120)
  name_en        String?  @db.VarChar(120)
  lat            Decimal? @db.Decimal(5, 3)
  long           Decimal? @db.Decimal(6, 3)
  zipcode        Int?     @db.UnsignedMediumInt
  districtRel    district? @relation(fields: [district_id], references: [district_id]) // ความสัมพันธ์กับ district
  users          user[]  // ความสัมพันธ์ย้อนกลับไปยัง user

  @@index([district_id], map: "district_id")
}

model user {
  id          Int     @id @default(autoincrement())
  firstname   String
  lastname    String
  email       String  @unique
  tel         String
  address     String
  province    Int     @db.UnsignedInt
  district    Int     @db.UnsignedInt
  subdistrict Int     @db.UnsignedInt
  username    String
  password    String
  role_id     Int
  otp         Int?
  plant       plant[]
  role        role     @relation(fields: [role_id], references: [id])
  provinceRel province @relation(fields: [province], references: [province_id]) // ความสัมพันธ์กับ province
  districtRel district @relation(fields: [district], references: [district_id]) // ความสัมพันธ์กับ district
  subdistrictRel subdistrict @relation(fields: [subdistrict], references: [subdistrict_id]) // ความสัมพันธ์กับ subdistrict

  @@index([role_id], map: "user_role_id_fkey")
  @@index([province], map: "user_province_fkey")
  @@index([district], map: "user_district_fkey")
  @@index([subdistrict], map: "user_subdistrict_fkey")
}

model plant_avaliable {
  id        Int          @id @default(autoincrement())
  plantname String
  factors   p_factor[]
  nutrients p_nutrient[]
  plant     plant[]
}

model p_other_nutrient {
  id         Int   @id @default(autoincrement())
  plant_id   Int
  age        Int
  nitrogen   Float
  phosphorus Float
  potassium  Float
  plant      plant @relation(fields: [plant_id], references: [id])

  @@index([plant_id], map: "p_other_nutrient_plant_id_fkey")
}

model p_other_factor {
  id             Int   @id @default(autoincrement())
  plant_id       Int
  age            Int
  pH             Float
  temperature    Float
  humidity       Float
  salinity       Float
  lightIntensity Float
  plant          plant @relation(fields: [plant_id], references: [id])

  @@index([plant_id], map: "p_other_factor_plant_id_fkey")
}

model plant {
  id                Int                @id @default(autoincrement())
  plantname         String
  plantedAt         DateTime
  user_id           Int
  plant_id          Int
  p_other_factors   p_other_factor[]
  p_other_nutrients p_other_nutrient[]
  variables         p_variable[]
  plant_avaliable   plant_avaliable    @relation(fields: [plant_id], references: [id])
  user              user               @relation(fields: [user_id], references: [id])

  @@index([plant_id], map: "plant_plant_id_fkey")
  @@index([user_id], map: "plant_user_id_fkey")
}

model p_nutrient {
  id             Int             @id @default(autoincrement())
  nitrogen       Float
  phosphorus     Float
  potassium      Float
  plant_id       Int
  age            Int
  plant_avaiable plant_avaliable @relation(fields: [plant_id], references: [id])

  @@index([plant_id], map: "p_nutrient_plant_id_fkey")
}

model p_factor {
  id             Int             @id @default(autoincrement())
  pH             Float
  temperature    Float
  humidity       Float
  lightIntensity Float
  salinity       Float
  plant_id       Int
  age            Int
  plant_avaiable plant_avaliable @relation(fields: [plant_id], references: [id])

  @@index([plant_id], map: "p_factor_plant_id_fkey")
}

model p_variable {
  id             Int      @id @default(autoincrement())
  plant_id       Int
  receivedAt     DateTime @default(now())
  nitrogen       Float
  phosphorus     Float
  potassium      Float
  pH             Float
  temperature    Float
  humidity       Float
  lightIntensity Float
  salinity       Float
  plant          plant    @relation(fields: [plant_id], references: [id])

  @@index([plant_id], map: "p_variable_plant_id_fkey")
}
